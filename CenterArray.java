//Написать метод, который заполнит массив произвольного размера числами по возрастанию, начинаz с центра массива, 
//например, [5,4,3,2,1,0,1,2,3,4,5]
class CenterArray {
	public static void main (String[]args){
	
		int [] arr = new int [10];
		for (int i = 0;i<arr.length/2;i++){
		
			arr[arr.length/2] = 0;

			arr[arr.length/2+i] = i;//заполнение второй половины массива удачно проходит только если длинна массива четная
									// если длинна массива нечетная - последняя ячейка содержит 0
			arr[arr.length/2-i] = i;//то же самое со второй половиной кода.
			// всё эт о происходит если пускать проверку кода только на одну из двух половин.
			//если одновременно задействовать обе строки кода, то при нечетной длинне массива массив заполняется
			//весь, кроме последних двух ячеек, в них - нули
			// но если четная, то нуль появляется только в левой половине массива в конце.
			
			//очевидно, что проблема где-то посредине.строка кода которая заполняет от середины к началу неправильно "отталкивается"
			
			
			//arr[arr.length/1+1] = 1;
			//arr[arr.length/1-1] = 1;
		}
		
		/*  
		
		arr[arr.length/2+i] = i;(двигаемся вперед от центра к наибольшему числу)
		старт
		arr.length/2 - текущий номер ячейки - 6, в нее кладем 0
		итератор 1
		arr[arr.length/2+i] - текущий номер ячейки - 7, в нее кладем 1
		итератор 2
		arr[arr.length/2+i] - текущий номер ячейки - 8, в нее кладем 2
		итератор 3
		arr[arr.length/2+i] - текущий номер ячейки - 9, в нее кладем 3
		итератор 4
		конец длинны массива
		выход
		
		
(черновик)
		arr[arr.length/2-i] = i;(двигаемся назад от центра к нулю)
		 старт
		 arr[arr.length/2-i] - текущий номер ячейки - 5, кладем в нее 0
		 итератор 1
		 arr[arr.length/2-i] - текущий номер ячейки - 4, кладем в нее 1
		 итератор 2
		 arr[arr.length/2-i] - текущий номер ячейкм - 3, кладем в нее 2
		 итератор 3
		 arr[arr.length/2-i] - текущий номер ячейки - 2, кладем в нее 3
		 итератор 4
		 arr[arr.length/2-i] - текущий номер ячейки - 2, кладем в нее 4
		 
		 не отталкивается от середины массива, судя по всему.
		 
		 
		 
		 
		
		
		
		
		
		
		arr.length/2+i - ячейка номер 6 плюс текущий i-товый номер = 1
		кладем в ячейку 7 1
		arr.length/2+i - ячейка номер 7 плюс текущий i-товый номер = 2
		кладем в ячейку 
		
		
		
		*/
		
		
		writeArrayOnConsole(arr);
		
		/*
		к примеру нам дан массив из 9 чисел который надо заполнить числами по возрастанию начиная от центра.
		прежде всего надо отыскать точку отсчета в массиве от которой начнут заполняться все остальные ячейки.
		как отыскать центр массива? поделить его длинну пополам.
		[0,0,0,0,0,0,0,0,0]
		[0,0,0,1,0,1,0,0,0]
		[0,0,2,1,0,1,2,0,0]
		[0,3,2,1,0,1,2,3,0]
		[4,3,2,1,0,1,2,3,4]
	
		myArr.length/2; 
		то есть в методе int i = myArr.length/2;
		начиная с центра, первое число ноль, а дальше по возрастанию по обе стороны.
		
		*/
		
		
	}

	
	
	
	public static void writeArrayOnConsole(int[] innerMassive){
		//System.out.println("Выводим массив: ");
		for (int i = 0; i<innerMassive.length;i++){
			System.out.print(innerMassive[i]+" ");
		}
		System.out.println();
	}
}