// Напишите программу, которая заменяет все элементы массива, кроме крайних, на полусумму соседей, и печатает результат.
class HalfSum{
	public static void main (String []args){
		
		int [] myArr = {9,3,12,6,10,3};

		for (int i = 1;i<myArr.length-1;i++){  
			myArr[i] = myArr[i-1]+ myArr[i+1]%2;
		
		}
/*
старт:
9+12%2=10.5
{9,10.5,12,6,10,3};
10.5+6%2 = 8.25
{9,10.5,8.25,10,3};
8.25+3%2 = 5.625
{9,10.5,8.25,10,5.625};
*/
			// очевидно, что способ подсчета совершенно неправильный, даже если учитывать скругления
			//очевидно, что нужно сначала создать клон, потом перевести его в дробный тип и пользоваться изначальным
			//массивом, а клон как вместилище результата, с делением разбобраться можно и потом.
		
		
		
		/* часть вторая: суммировать и делить сумму соседних значений, занесение итоговой суммы в текущую ячейку.
		+ перевести целочисленную переменную в дробную
		
		часть третья: клонирование массива с целю суммирования соседних изначальных значений и занесение полусуммы соседей
		в клонированный массив, вывод.
		*/
		
		/*
		некоторые закономерности:
		- здесь точно понадобится клонирование массива, чтобы суммировались числа-константы, 
			а не изменяющиеся в процессе цикла и подсчета значения.
		- решить вопрос с типом переменной.

		*/
		writeArrayOnConsole(myArr);
	}
	public static void writeArrayOnConsole(int[] innerMassive){
		//System.out.println("Выводим массив: ");
		for (int i = 0; i<innerMassive.length;i++){
			System.out.print(innerMassive[i]+" ");
		}
		System.out.println();
	}
}