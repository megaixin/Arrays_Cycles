// Напишите программу, которая заменяет все элементы массива, кроме крайних, на полусумму соседей, и печатает результат.
class HalfSum{
	public static void main (String []args){
		
		int [] myArr = {9,3,12,6,10,3};
		
		/*
		некоторые закономерности:
		- начало цикла с 1 а не с 0
		- здесь точно понадобится конирование массива, чтобы суммировались числа-константы, 
		а не изменяющиеся в процессе цикла и подсчета значения.
		
		- решить вопрос с типом переменной.
		
		*/

		//крайние - это первое и последнее числа массива
		//соседи - это числа справа и слева от текущего значения.
		
		/* 
		что такое полусумма:
		к примеру из массива {9,3,12,6,10,3} берем число 6 из ячейки номер 3. 
		Его соседи - числа 12(ячейки 2) и 10(ячейка 4).
		чтобы получить полусумму этих двух чисел нам нужно их сложить и разделить на 2.
		то есть 12+10:2 = 11
		получившееся число кладем в текущую ячейку, то есть вместо 6 в ячейку 3 ложится 11
		{9,3,12,11,10,3}
		
		разбираем весь пример массива {9,3,12,6,10,3}:
		все элементы кроме крайних
		это значит, что числа 9(первое) и 3(последнее) не будут изменяться.
		значит начинаем с ячейки номер 1 в значением 3: у ячейки соседи 0 и 2 со значениями 9 и 12
		9+12:2 = 10.5
		(скорее всего нужно будет создавать не целочисленный массив, а дробный либо округлять. пока что примем второй вариант)
		кладем результат в текущий элемент
		{9,10,12,6,10,3}

		число 12 в ячейке номер 2: ее соседи числа 3 и 6 в ячейках 1 и 3
		3+6:2 = 4.5 (округляем до 4)
		кладем результат в текущий элемент массива
		{9,10,4,6,10,3}
		
		число 6 в ячейке номер 3: ее соседи 12 и 10 из ячеек 2 и 4
		12+10:2 = 11
		кладем результат в текущий элемент массива
		{9,10,4,11,10,3}
		
		число 10 в ячейке номер 4: ее соседи 6 и 3 из ячеек 3 и 5
		6+3:2 = 4.5 (округляем до 4)
		кладем результат в текущий элемент массива
		{9,10,4,11,4,3}
		
		итак, все числа изменены кроме крайних.

		*/
		
	}
}